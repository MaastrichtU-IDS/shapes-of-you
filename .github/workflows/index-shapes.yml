name: Index shapes
on:
  schedule:
    # Every saturday at 01:00 
    - cron:  '0 1 * * 6'
  workflow_dispatch:
    inputs:
      logging:
        description: 'Logging level (debug/info/warning/error)'
        required: true
        default: 'info'

# TODO: to delete repo that has been deleted, run a workflow every day to check 
# if all indexed repos are still up (delete the one not available anymore)

env:
  LOGGING_LEVEL: ${{ github.event.inputs.logging }}
jobs:
  index-shapes:
    strategy:
      fail-fast: false
      matrix:
        include:
        - git-service: github
          search-string: dbpedia
        - git-service: github
          search-string: topic:wikidata
        - git-service: github
          search-string: topic:owl
        - git-service: github
          search-string: topic:skos
        - git-service: github
          search-string: topic:obofoundry
        - git-service: github
          search-string: topic:bioportal
        - git-service: github
          search-string: monarchinitiative
        - git-service: github
          search-string: wikidata
        - git-service: github
          search-string: topic:shacl-shapes
        - git-service: github
          search-string: topic:shex
        - git-service: github
          search-string: topic:grlc
        - git-service: github
          search-string: sparql+queries
        - git-service: github
          search-string: topic:smartapi
        - git-service: github
          search-string: topic:ncats-translator
        - git-service: github
          search-string: topic:translator-api
        - git-service: github
          search-string: topic:openapi
        - git-service: github
          search-string: topic:api
        - git-service: github
          search-string: r2rml
        - git-service: github
          search-string: topic:rml-mapping
        - git-service: github
          search-string: rml
        - git-service: github
          search-string: nanobench
        - git-service: github
          search-string: nanopub
        - git-service: github-extras
          search-string: EXTRAS_GITHUB_REPOSITORIES.txt
        - git-service: github-extras
          search-string: EXTRAS_GITHUB_REPOSITORIES_2.txt
        - git-service: github
          search-string: ncats+translator
        - git-service: github
          search-string: biothings
        - git-service: github
          search-string: smartapi
        - git-service: github
          search-string: knowledge+provider
        - git-service: gitee
          search-string: ontology
        - git-service: gitee
          search-string: sparql
        - git-service: gitlab
          search-string: owl
        - git-service: gitlab
          search-string: shacl
        - git-service: gitlab
          search-string: shex
        - git-service: gitlab
          search-string: sparql
        - git-service: gitlab
          search-string: skos
        - git-service: gitlab
          search-string: obofoundry
        - git-service: github
          search-string: csvw
        - git-service: gitlab
          search-string: csvw
        - git-service: gitee
          search-string: csvw
        - git-service: lod-cloud
        - git-service: yummydata
        - git-service: gitee
          search-string: covid+data
        - git-service: github
          search-string: covid+data
        - git-service: gitlab
          search-string: covid+data

        # - git-service: github # eclipse/rdf4j slow down
        #   search-string: shacl
        # - git-service: gitlab
        #   search-string: ontology # Fails without warnings

    runs-on: ubuntu-latest
    # runs-on: [self-hosted, linux, X64, dsri, bio2rdf]
    steps:
    - name: Checkout the repo code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
  
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'


    - name: Install requirements
      # env: # Run label can be processed here as env var to reuse later
      #   RUN_LABEL: ${{ matrix.search-string }}
      run: |
        sudo apt-get update
        sudo apt-get install libicu-dev python3-dev
        python -m pip install -r etl/requirements.txt
        wget https://github.com/MaastrichtU-IDS/d2s-sparql-operations/releases/latest/download/sparql-operations.jar
      # export RUN_LABEL=${RUN_LABEL//:/-}
      # echo "RUN_LABEL=${RUN_LABEL//+/-}" >> $GITHUB_ENV

    - name: Run Python script to index ${{ matrix.search-string }} in ${{ matrix.git-service }}
      env:
        GIT_SERVICE: ${{ matrix.git-service }}
        SEARCH_TOPICS: ${{ matrix.search-string }}
        API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        ENDPOINT_USER: dav
        ENDPOINT_PASSWORD: ${{ secrets.GRAPHDB_PASSWORD }}
      run: |
        python etl/index_shapes.py $GIT_SERVICE $SEARCH_TOPICS

    # - name: Prepare output
    #   run: |
    #     mkdir -p output
    #     mv REPORT.md output/ || exit 0
    #     mv shapes-rdf.ttl output/ || exit 0

    # - name: Upload failed shapes report as artifact
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: report-${{ matrix.git-service }}-${{ matrix.search-string }}
    #     # name: shapes-rdf-${{ matrix.git-service }}-${{ env.RUN_LABEL }}
    #     path: REPORT.md

    # - name: Upload ${{ matrix.git-service }}-${{ matrix.search-string }} RDF output as artifact
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: shapes-rdf-${{ matrix.git-service }}-${{ matrix.search-string }}
    #     path: shapes-rdf.ttl

    # - name: Use sparql-operations.jar to upload RDF to GraphDB
    #   env:
    #     GRAPH: https://w3id.org/um/ids/shapes/${{ matrix.git-service }}
    #     ENDPOINT_USER: ${{ secrets.GRAPHDB_USER }}
    #     ENDPOINT_PASSWORD: ${{ secrets.GRAPHDB_PASSWORD }}
    #   run: |
    #     wget https://github.com/MaastrichtU-IDS/d2s-sparql-operations/releases/latest/download/sparql-operations.jar
    #     cat shapes-rdf.ttl
    #     ls
    #     wc -l shapes-rdf.ttl
    #     java -jar sparql-operations.jar -o upload -i shapes-rdf.ttl -e "https://graphdb.dumontierlab.com/repositories/shapes-registry/statements" -u $ENDPOINT_USER -p $ENDPOINT_PASSWORD -g $GRAPH

    # - name: Upload ${{ matrix.git-service }}-${{ matrix.search-string }} RDF file to the triplestore
    #   uses: vemonet/sparql-operations-action@master
    #   with:
    #     operation: upload
    #     file: shapes-rdf.ttl
    #     endpoint: https://graphdb.dumontierlab.com/repositories/shapes-registry/statements
    #     user: ${{ secrets.GRAPHDB_USER }}
    #     password: ${{ secrets.GRAPHDB_PASSWORD }}
    #     graph: "https://w3id.org/um/ids/shapes/${{ matrix.git-service }}"

    # - name: Upload ${{ matrix.git-service }}-${{ matrix.search-string }} RDF file to the triplestore
    #   uses: MaastrichtU-IDS/RdfUpload@master
    #   with:
    #     file: shapes-rdf.ttl
    #     endpoint: https://graphdb.dumontierlab.com/repositories/shapes-registry/statements
    #     user: ${{ secrets.GRAPHDB_USER }}
    #     password: ${{ secrets.GRAPHDB_PASSWORD }}
    #     graph: "https://w3id.org/um/ids/shapes/${{ matrix.git-service }}"


    # - name: Commit and push report-${{ matrix.git-service }}-${{ matrix.search-string }}.md file in report branch
    #   env:
    #     GIT_SERVICE: ${{ matrix.git-service }}
    #     # RUN_LABEL: ${{ matrix.search-string }}
    #   run: |
    #     export RUN_LABEL=${RUN_LABEL//:/-}
    #     export RUN_LABEL=${RUN_LABEL//+/-}
    #     mv REPORT.md tmp-REPORT.md
    #     git stash
    #     git fetch
    #     git checkout report
    #     mv tmp-REPORT.md report-$GIT_SERVICE-$RUN_LABEL.md
    #     git diff
    #     git config --global user.email "vincent.emonet@gmail.com"
    #     git config --global user.name "Vincent Emonet"
    #     git add report-$GIT_SERVICE-$RUN_LABEL.md
    #     git commit -m "Update report-$GIT_SERVICE-$RUN_LABEL.md" || exit 0
    #     git push || exit 0

    # - name: Set up Java 11
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: 11

    # http://vos.openlinksw.com/owiki/wiki/VOS/VirtRDFInsert
    # - name: Load RDF files to Virtuoso
    #   env:
    #     D2S_USERNAME: dba
    #     D2S_PASSWORD: ${{ secrets.GRAPHDB_PASSWORD }}
    #     GIT_SERVICE: ${{ matrix.git-service }}
    #   run: |
    #     curl -T shapes-rdf.ttl  https://data.index.semanticscience.org/DAV/home/dba/rdf_sink/$GIT_SERVICE.ttl -u dba:maasitest12
      # https://data.index.semanticscience.org/DAV/home/dba/rdf_sink/gitee.ttl
        
      # curl -T test.ttl https://data.index.semanticscience.org/DAV/home/dba/rdf_sink/gitee.ttl -u dba:maasitest12

      # curl --digest --user dba:$D2S_PASSWORD --verbose --url "https://data.index.semanticscience.org/sparql-graph-crud-auth?graph-uri=https://w3id.org/um/ids/shapes/$GIT_SERVICE" -T shapes-rdf.nt 
      # curl --digest --user dba:maasitest12 --verbose --url "https://data.index.semanticscience.org/sparql-graph-crud-auth?graph-uri=https://w3id.org/um/ids/shapes/tototo" -T yummly-recipes.ttl 
      # http://vos.openlinksw.com/owiki/wiki/VOS/VirtGraphProtocolCURLExamples

      # mkdir -p output
      # split -l 1000 --additional-suffix=.nt shapes-rdf.nt output/
      # wget -q https://github.com/MaastrichtU-IDS/d2s-sparql-operations/releases/latest/download/sparql-operations.jar
      # java -jar sparql-operations.jar -o upload -i "output/*" -e "https://data.index.semanticscience.org/sparql" -g "https://w3id.org/um/ids/shapes/$GIT_SERVICE"

      # curl -T shapes-rdf.nt https://data.index.semanticscience.org/DAV/home/demo/Shapes/ -u dba:$D2S_PASSWORD
      # http://vos.openlinksw.com/owiki/wiki/VOS/VirtRDFInsert#HTTP%20PUT%20Example%202


    # - name: Clear older graph in the triplestore
    #   if: github.event.inputs.clear == 'true'
    #   uses: vemonet/sparql-operations-action@v1
    #   with:
    #     query: "CLEAR GRAPH <https://w3id.org/um/ids/shapes>"
    #     endpoint: https://graphdb.dumontierlab.com/repositories/shapes-registry/statements
    #     user: ${{ secrets.GRAPHDB_USER }}
    #     password: ${{ secrets.GRAPHDB_PASSWORD }}

